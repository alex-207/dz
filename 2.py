# ==================================================================
# Задача 10:
# ==================================================================
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. Выведите минимальное количество монет, которые нужно перевернуть
# 5 -> 1 0 1 1 0
# 2

# n = int(input("Введите общее количество монеток: "))
# countReshka = 0  # счетчик для решки
# countHerb = 0  # счетчик для герба

# # СЧИТЫВАЕМ ПОЛОЖЕНИЕ ДЛЯ КАЖДОЙ МОНЕТКИ n раз
# for i in range(n):
#     position = int(input("Введите положение монетки 0..1: "))
#     if position == 1 or position == 0:  # проверка на корректность
#         # СЧИТАЕМ МОНЕТКИ ГЕРБОМ ВВЕРХ
#         if position == 1:
#             countHerb += 1

#         # СЧИТАЕМ МОНЕТКИ РЕШКОЙ ВВЕРХ
#         else:
#             countReshka += 1
#     else:
#         print("Некорректный ввод!")

# # СРАВНИВАЕМ И ВЫВОДИМ КОГО МЕНЬШЕ
# if countHerb > countReshka:
#     print(countReshka)
# else:
#     print(countHerb)


# ==================================================================
# Задача 12:
# ==================================================================
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X, Y≤1000), а Катя должна их отгадать. Для
# этого Петя делает две подсказки. Он называет сумму этих чисел S и их
# произведение P. Помогите Кате отгадать задуманные Петей числа.
# 4 4 -> 2 2
# 5 6 -> 2 3
# import math

# S = int(input("Введите сумму Х + Y: "))
# P = int(input("Введите произведение Х * Y: "))
# X = 0
# Y = 0

# a = (S * S) - (4 * P)

# # ЕСЛИ a >= 0 -> ОТВЕТ МОЖНО ВЫСЧИТАТЬ
# if a >= 0:
#     X = int((S - math.sqrt(a)) / 2)
#     Y = int((S + math.sqrt(a)) / 2)

#     if X <= 1000 and Y <= 1000:
#         print(X, Y)

#     else :
#         print("Загаданные числа не входят в диапазон 0..1'000")

# else :
#     print("Таких чисел не существует!")

# ==================================================================
# Задача 14:
# ==================================================================
# Требуется вывести все целые степени двойки (т.е. числа вида 2^k), не превосходящие числа N.
# 10 -> 1 2 4 8

# N = int(input("Введите предел вывода: "))
# degree = 0

# for i in range(0, N):
#     if N > 2**degree:
#         print(2**degree)
#         degree += 1
