import os
os.system('clear')
# ==================================================================
# Задача 22
# ==================================================================
# Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа.
# n — кол-во элементов первого множества.
# m — кол-во элементов второго множества.
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите размер первого множества: "))
# m = int(input("Введите размер второго множества: "))
# my_list1 = []
# my_list2 = []

# # ЗАПОЛНЕНИЕ ПЕРВОГО СПИСКА
# for i in range(0, n):
#     my_list1.append(int(input("Введите целое число для первого множества: ")))
# # print(my_list1)

# # ЗАПОЛНЕНИЕ ВТОРОГО СПИСКА
# for i in range(0, m):
#     my_list2.append(int(input("Введите целое число для второго множества: ")))
# # print(my_list2)

# my_set1 = set(my_list1)  # список1 -> множество1
# my_set2 = set(my_list2)  # список2 -> множество2
# intersection_set = my_set1.intersection(my_set2)  # пересечение множеств
# result_set = sorted(intersection_set)  # сортировка

# print(*result_set)


# ==================================================================
# Задача 24
# ==================================================================
# В фермерском хозяйстве в Карелии выращивают чернику.
# Она растёт на круглой грядке, причём кусты высажены только по окружности.
# Таким образом, у каждого куста есть ровно два соседних.
# Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники.
# Эта система состоит из управляющего модуля и нескольких собирающих модулей.
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,находясь перед некоторым кустом заданной во входном файле грядки.
# 4 -> 1 2 3 4
# 9

# N = int(input("Введите количество кустов: "))
# berry_count = []  # количество ягод на кустах
# max_berry_count = 0

# # ЗАПОЛНЕНИЕ СПИСКА СКОЛЬКО ЯГОД НА КАЖДОМ КУСТЕ
# for i in range(0, N):
#     berry_count.append(int(input("Введите количество ягод на кусте: ")))
# print(berry_count)

# berry_count_first = berry_count[0] + berry_count[1] + berry_count[-1]  # количество ягод с первого куста и его соседей

# berry_count_last = berry_count[-1] + berry_count[-2] + berry_count[0]  # количество ягод с последнего куста и его соседей

# print('Урожай с первого куста и его соседей:', berry_count_first)
# print('Урожай с последнего куста и его соседей:', berry_count_last)

# # ВЫБОР МАКСИМАЛЬНОГО УРОЖАЯ МЕЖДУ ПЕРВЫМ И ПОСЛЕДНИМ КУСТАМИ
# if berry_count_first > berry_count_last:
#     max_berry_count = berry_count_first
# elif berry_count_first < berry_count_last:
#     max_berry_count = berry_count_last
# print('Максимальный урожай между первым и последним кустами:', max_berry_count)

# # УРОЖАЙ С ПРОМЕЖУТОЧНЫХ КУСТОВ
# for i in range(1, len(berry_count) - 1):  # со 2-го по предпоследний куст
#     max_berry_count2 = berry_count[i] + berry_count[i-1] + berry_count[i+1]
#     print('Урожай с промежуточных кутсов:', max_berry_count2)
#     if max_berry_count2 > max_berry_count:  # если максимальный урожай с промежуточных кустов превысит уже существующий максимум между первым и последним кустами
#         max_berry_count = max_berry_count2  # обновить максимум
# print('Максимальный урожай равен:', max_berry_count)
        